name: Release

on:
  push:
    branches: [main, master]

permissions:
  contents: write
  packages: write
  id-token: write

env:
  GO_VERSION: "1.25"

jobs:
  build-java:
    name: Build Java JAR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Java JAR
        run: |
          cd analysis/java
          ./gradlew clean shadowJar

      - name: Upload Java JAR
        uses: actions/upload-artifact@v4
        with:
          name: java-jar
          path: analysis/java/java_ast_extractor.jar
          retention-days: 1

  build-binaries:
    name: Build ${{ matrix.goos }}-${{ matrix.goarch }}
    needs: build-java
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Download Java JAR
        uses: actions/download-artifact@v4
        with:
          name: java-jar
          path: analysis/java/

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: v2.4.8
          args: build --single-target --clean
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/*
          retention-days: 1

  release:
    name: Create GitHub Release
    needs: build-binaries
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --force --tags

      - name: Calculate next version
        id: version
        run: |
          # Install svu
          curl -sL https://github.com/caarlos0/svu/releases/download/v2.3.0/svu_2.3.0_linux_amd64.tar.gz | tar xz
          chmod +x svu

          # Calculate next patch version
          NEXT_VERSION=$(./svu patch)
          echo "next=$NEXT_VERSION" >> $GITHUB_OUTPUT
          echo "Next version: $NEXT_VERSION"

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: binaries-*
          path: dist/
          merge-multiple: true

      - name: Download Java JAR
        uses: actions/download-artifact@v4
        with:
          name: java-jar
          path: analysis/java/

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: v2.4.8
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}
          SCOOP_BUCKET_GITHUB_TOKEN: ${{ secrets.SCOOP_BUCKET_GITHUB_TOKEN }}
          GITHUB_OWNER: ${{ github.repository_owner }}
          GORELEASER_CURRENT_TAG: ${{ steps.version.outputs.next }}
